---
openapi: "3.0.0"
info:
  version: "1.0.0"
  title: "Department of Home Affairs Checks"
  license:
    name: "MIT"
servers:
  - url: "http://localhost:8082"
paths:
  /status/marital/{idNumber}:
    get:
      summary: "Determine the Marital Status of a citizen given that citizens ID Number"
      operationId: "getMaritalStatusById"
      tags:
        - "dha"
      parameters:
        - name: "idNumber"
          in: "path"
          required: true
          description: "The national id number of the citizen whose status we want to determine"
          schema:
            type: "string"
      responses:
        "200":
          description: "Expected response to a valid request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MaritalStatusResponse"
        "401":
          description: "User is not authorized to access this resource"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedError"
        default:
          description: "unexpected error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /status/duplicateId/{idNumber}:
    get:
      summary: "Determine if the citizen has a duplicate ID document issued"
      operationId: "getDuplicateIdDocumentStatusById"
      tags:
        - "dha"
      parameters:
        - name: "idNumber"
          in: "path"
          required: true
          description: "The national id number of the citizen whose status we want to determine"
          schema:
            type: "string"
      responses:
        "200":
          description: "Expected response to a valid request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DuplicateIDDocumentCheck"
        "401":
          description: "User is not authorized to access this resource"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedError"
        default:
          description: "unexpected error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /status/living/{idNumber}:
    get:
      summary: "Determine if the citizen is alive or deceased"
      operationId: "getLivingStatusById"
      tags:
        - "dha"
      parameters:
        - name: "idNumber"
          in: "path"
          required: true
          description: "The national id number of the citizen whose status we want to determine"
          schema:
            type: "string"
      responses:
        "200":
          description: "Expected response to a valid request"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LivingStatus"
        "401":
          description: "User is not authorized to access this resource"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedError"
        default:
          description: "unexpected error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  securitySchemes:
    bearerAuth: # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    MaritalStatusResponse:
      type: "object"
      required:
        - "currentStatus"
      properties:
        currentStatus:
          $ref: "#/components/schemas/MaritalStatus"
        previouStatus:
          $ref: "#/components/schemas/MaritalStatus"
          nullable: true
    Error:
      type: "object"
      required:
        - "code"
        - "message"
      properties:
        code:
          type: "integer"
          format: "int32"
        message:
          type: "string"
    UnauthorizedError:
      type: "object"
      description: "Access token is missing or invalid"
    MaritalStatus:
      type: "object"
      required:
        - "status"
        - "effectiveFrom"
        - "effectiveTo"
      properties:
        status:
          $ref: "#/components/schemas/MaritalStatusEnum"
        effectiveFrom:
          type: "string"
        effectiveTo:
          type: "string"
    MaritalStatusEnum:
      type: "string"
      enum:
        - "Single"
        - "Widowed"
        - "Divorced"
        - "Married"
    DuplicateIDDocumentCheck:
      type: "object"
      required:
        - "hasDuplicateId"
      properties:
        hasDuplicateId:
            type: "boolean"
        duplicateIdIssueDate:
          type: "string"
    LivingStatus:
      type: object
      required:
        - "livingStatus"
      properties:
        livingStatus:
          type: string
          enum:
            - "Alive"
            - "Deceased"
        deceasedDate:
          type: "string"
security:
  - bearerAuth: []